/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Faq as PrismaFaq } from "@prisma/client";

export class FaqServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.FaqCountArgs, "select">): Promise<number> {
    return this.prisma.faq.count(args);
  }

  async faqs(args: Prisma.FaqFindManyArgs): Promise<PrismaFaq[]> {
    return this.prisma.faq.findMany(args);
  }
  async faq(args: Prisma.FaqFindUniqueArgs): Promise<PrismaFaq | null> {
    return this.prisma.faq.findUnique(args);
  }
  async createFaq(args: Prisma.FaqCreateArgs): Promise<PrismaFaq> {
    return this.prisma.faq.create(args);
  }
  async updateFaq(args: Prisma.FaqUpdateArgs): Promise<PrismaFaq> {
    return this.prisma.faq.update(args);
  }
  async deleteFaq(args: Prisma.FaqDeleteArgs): Promise<PrismaFaq> {
    return this.prisma.faq.delete(args);
  }
}
